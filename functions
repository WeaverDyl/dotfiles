#!/bin/bash

colors() {
	local fgc bgc vals seq0

	printf "Color escapes are %s\n" '\e[${value};...;${value}m'
	printf "Values 30..37 are \e[33mforeground colors\e[m\n"
	printf "Values 40..47 are \e[43mbackground colors\e[m\n"
	printf "Value  1 gives a  \e[1mbold-faced look\e[m\n\n"

	# foreground colors
	for fgc in {30..37}; do
		# background colors
		for bgc in {40..47}; do
			fgc=${fgc#37} # white
			bgc=${bgc#40} # black

			vals="${fgc:+$fgc;}${bgc}"
			vals=${vals%%;}

			seq0="${vals:+\e[${vals}m}"
			printf "  %-9s" "${seq0:-(default)}"
			printf " ${seq0}TEXT\e[m"
			printf " \e[${vals:+${vals+$vals;}}1mBOLD\e[m"
		done
		echo; echo
	done
}

#
# # ex - archive extractor
# # usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

upload() {
	if [ $# -ne 1 ]; then
		echo "You must give a single filename as an argument"
	else
		link=$(curl -s -F"file=@$1" http://0x0.st)
		if [ "$link" ]; then
			if [ "$link" == "Segmentation fault" ]; then
				echo "Upload failed!"
			else
				echo "$link" | xclip -selection clipboard
				echo "'$1' was successfully uploaded! Link: $link"
			fi
		else
			echo "Upload failed!"
		fi
	fi
}

shorten() {
	if [ $# -ne 1 ]; then
		echo "You must give a single URL as an argument"
	else
		# Add "http://" if not already present to prevent errors
		if [[ ! ${1,,} =~ ^https?://.+$ ]]; then
			set -- "http://$1"
		fi
		link=$(curl -s -F"shorten=$1" http://0x0.st)
		if [ "$link" ]; then
			# Bad error handling
			if [ "$link" == "Segmentation fault" ]; then
				echo "Error shortening URL"
			else
				echo "$link" | xclip -selection clipboard
				echo "Here's your shortened link: $link"
			fi
		else
			echo "Error shortening URL"
		fi
	fi

}


